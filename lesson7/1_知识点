
1. Gcc 内嵌汇编:

    基本格式:   __asm__ __volatile__(代码部分:输出部分列表: 输入部分列表:损坏部分列表);
```
        static inline void atomic_add(int i, atomic_t *v)
        {
                __asm__ __volatile__("lock;" "addl %1,%0"
                             : "+m" (v->a_count)
                             : "ir" (i));
        }
        //"lock;" "addl %1,%0" 是汇编指令部分，%1,%0是占位符，它表示输出、输入列表中变量或表态式，占位符的数字从输出部分开始依次增加，这些变量或者表态式会被GCC处理成寄存器、内存、立即数放在指令中。 
        //: "+m" (v->a_count) 是输出列表部分，“+m”表示(v->a_count)和内存地址关联
        //: "ir" (i) 是输入列表部分，“ir” 表示i是和立即数或者寄存器关联
```


```
1. 汇编代码部分，这里是实际嵌入的汇编代码。
2. 输出列表部分，让 GCC 能够处理 C 语言左值表达式与汇编代码的结合。
3. 输入列表部分，也是让 GCC 能够处理 C 语言表达式、变量、常量，让它们能够输入到汇编代码中去。
4. 损坏列表部分，告诉 GCC 汇编代码中用到了哪些寄存器，以便 GCC 在汇编代码运行前，
    生成保存它们的代码，并且在生成的汇编代码运行后，恢复它们（寄存器）的代码。
```